/*
! tailwindcss v3.1.8 | MIT License | https://tailwindcss.com
*//*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}
  @font-face {
    font-family: "OpenSans";
    font-weight: 400;
    font-style: normal;
    font-display: swap;
    src: url(/static/fonts/OpenSans.woff2) format("woff2"),
      url(/static/fonts/OpenSans.woff) format("woff");
  }

  :focus-visible {
    outline: 3px solid #6366f1;
    outline-offset: 3px;
    border-radius: 2px;
  }

  html {
    height: 100%;
    scroll-behavior: smooth;
  }

  body {
    height: 100%;
    background-color: #ffffff;
    font-family: OpenSans, sans-serif;
    font-size: 16px;
    line-height: 1.5;
    color: #333333;
  }

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

  .container {
    margin-left: auto;
    margin-right: auto;
    box-sizing: content-box;
    max-width: 1100px;
    padding-left: 16px;
    padding-right: 16px;
}

  .app {
    display: flex;
    flex-direction: column;
    min-height: 100%;
    overflow-x: hidden;
    overflow-x: clip;
  }
/* [data-header] {
  background-image: url("/img/cover.webp");
} */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0
}
.pointer-events-none {
    pointer-events: none
}
.pointer-events-auto {
    pointer-events: auto
}
.visible {
    visibility: visible
}
.invisible {
    visibility: hidden
}
.fixed {
    position: fixed
}
.absolute {
    position: absolute
}
.relative {
    position: relative
}
.inset-0 {
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: 0px
}
.inset-x-0 {
    left: 0px;
    right: 0px
}
.inset-y-0 {
    top: 0px;
    bottom: 0px
}
.top-1\/2 {
    top: 50%
}
.left-1 {
    left: 4px
}
.right-1 {
    right: 4px
}
.bottom-5 {
    bottom: 20px
}
.left-0 {
    left: 0px
}
.right-0 {
    right: 0px
}
.left-1\/2 {
    left: 50%
}
.top-4 {
    top: 16px
}
.right-4 {
    right: 16px
}
.top-0 {
    top: 0px
}
.top-0\.5 {
    top: 2px
}
.left-0\.5 {
    left: 2px
}
.-top-1\.5 {
    top: -6px
}
.-left-0\.5 {
    left: -2px
}
.-top-1 {
    top: -4px
}
.-left-0 {
    left: -0px
}
.right-5 {
    right: 20px
}
.isolate {
    isolation: isolate
}
.z-10 {
    z-index: 10
}
.z-\[1\] {
    z-index: 1
}
.z-\[2000\] {
    z-index: 2000
}
.-z-10 {
    z-index: -10
}
.z-fixed {
    z-index: 1000
}
.m-auto {
    margin: auto
}
.my-10 {
    margin-top: 40px;
    margin-bottom: 40px
}
.my-8 {
    margin-top: 32px;
    margin-bottom: 32px
}
.my-6 {
    margin-top: 24px;
    margin-bottom: 24px
}
.mx-auto {
    margin-left: auto;
    margin-right: auto
}
.-mx-4 {
    margin-left: -16px;
    margin-right: -16px
}
.my-5 {
    margin-top: 20px;
    margin-bottom: 20px
}
.mb-3 {
    margin-bottom: 12px
}
.ml-auto {
    margin-left: auto
}
.mb-6 {
    margin-bottom: 24px
}
.mb-7 {
    margin-bottom: 28px
}
.mb-10 {
    margin-bottom: 40px
}
.-ml-5 {
    margin-left: -20px
}
.mt-4 {
    margin-top: 16px
}
.mt-2 {
    margin-top: 8px
}
.-mr-px {
    margin-right: -1px
}
.ml-0\.5 {
    margin-left: 2px
}
.ml-0 {
    margin-left: 0px
}
.mr-0\.5 {
    margin-right: 2px
}
.mr-0 {
    margin-right: 0px
}
.mb-2 {
    margin-bottom: 8px
}
.mt-1\.5 {
    margin-top: 6px
}
.mt-1 {
    margin-top: 4px
}
.mr-1\.5 {
    margin-right: 6px
}
.mr-1 {
    margin-right: 4px
}
.mt-6 {
    margin-top: 24px
}
.mb-4 {
    margin-bottom: 16px
}
.mr-\[var\(--scrollbar-visible-width\2c 0\)\] {
    margin-right: var(--scrollbar-visible-width,0)
}
.ml-2 {
    margin-left: 8px
}
.box-content {
    box-sizing: content-box
}
.block {
    display: block
}
.inline-block {
    display: inline-block
}
.flex {
    display: flex
}
.inline-flex {
    display: inline-flex
}
.grid {
    display: grid
}
.contents {
    display: contents
}
.hidden {
    display: none
}
.h-full {
    height: 100%
}
.h-16 {
    height: 64px
}
.h-60 {
    height: 240px
}
.h-96 {
    height: 384px
}
.h-10 {
    height: 40px
}
.h-36 {
    height: 144px
}
.h-8 {
    height: 32px
}
.h-1 {
    height: 4px
}
.h-28 {
    height: 112px
}
.h-screen {
    height: 100vh
}
.h-4 {
    height: 16px
}
.h-7 {
    height: 28px
}
.h-\[18px\] {
    height: 18px
}
.h-\[20px\] {
    height: 20px
}
.h-\[2px\] {
    height: 2px
}
.h-5 {
    height: 20px
}
.h-2 {
    height: 8px
}
.h-14 {
    height: 56px
}
.h-6 {
    height: 24px
}
.max-h-full {
    max-height: 100%
}
.min-h-full {
    min-height: 100%
}
.min-h-1 {
    min-height: 4px
}
.min-h-screen {
    min-height: 100vh
}
.min-h-10 {
    min-height: 40px
}
.min-h-9 {
    min-height: 36px
}
.w-14 {
    width: 56px
}
.w-full {
    width: 100%
}
.w-7 {
    width: 28px
}
.w-fit {
    width: -moz-fit-content;
    width: fit-content
}
.w-10 {
    width: 40px
}
.w-\[18px\] {
    width: 18px
}
.w-\[710px\] {
    width: 710px
}
.w-4 {
    width: 16px
}
.w-96 {
    width: 384px
}
.w-\[24px\] {
    width: 24px
}
.w-\[74px\] {
    width: 74px
}
.w-5 {
    width: 20px
}
.w-2 {
    width: 8px
}
.w-12 {
    width: 48px
}
.w-8 {
    width: 32px
}
.min-w-9 {
    min-width: 36px
}
.min-w-0 {
    min-width: 0px
}
.max-w-min {
    max-width: -moz-min-content;
    max-width: min-content
}
.max-w-md {
    max-width: 448px
}
.max-w-full {
    max-width: 100%
}
.shrink-0 {
    flex-shrink: 0
}
.grow {
    flex-grow: 1
}
.-translate-y-1\/2 {
    --tw-translate-y: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.translate-x-\[200\%\] {
    --tw-translate-x: 200%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.-translate-x-1\/2 {
    --tw-translate-x: -50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.translate-x-full {
    --tw-translate-x: 100%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.translate-x-0 {
    --tw-translate-x: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.translate-y-\[9px\] {
    --tw-translate-y: 9px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.-translate-y-\[9px\] {
    --tw-translate-y: -9px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.translate-x-5 {
    --tw-translate-x: 20px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.rotate-\[-120deg\] {
    --tw-rotate: -120deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.rotate-0 {
    --tw-rotate: 0deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.rotate-45 {
    --tw-rotate: 45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.-rotate-45 {
    --tw-rotate: -45deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.scale-95 {
    --tw-scale-x: .95;
    --tw-scale-y: .95;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.scale-100 {
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.scale-50 {
    --tw-scale-x: .5;
    --tw-scale-y: .5;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.scale-90 {
    --tw-scale-x: .9;
    --tw-scale-y: .9;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.scale-x-110 {
    --tw-scale-x: 1.1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.transform {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
@keyframes spin {
    to {
        transform: rotate(360deg)
    }
}
.animate-\[spin_0\.8s_linear_infinite\] {
    animation: spin 0.8s linear infinite
}
.cursor-default {
    cursor: default
}
.cursor-pointer {
    cursor: pointer
}
.touch-pan-y {
    --tw-pan-y: pan-y;
    touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom)
}
.select-none {
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none
}
.grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr))
}
.flex-col {
    flex-direction: column
}
.flex-wrap {
    flex-wrap: wrap
}
.place-content-center {
    place-content: center
}
.items-start {
    align-items: flex-start
}
.items-center {
    align-items: center
}
.justify-end {
    justify-content: flex-end
}
.justify-center {
    justify-content: center
}
.justify-between {
    justify-content: space-between
}
.gap-8 {
    gap: 32px
}
.gap-4 {
    gap: 16px
}
.gap-5 {
    gap: 20px
}
.gap-3 {
    gap: 12px
}
.gap-2 {
    gap: 8px
}
.overflow-hidden {
    overflow: hidden
}
.overflow-y-auto {
    overflow-y: auto
}
.overflow-x-hidden {
    overflow-x: hidden
}
.rounded {
    border-radius: 4px
}
.rounded-md {
    border-radius: 6px
}
.rounded-sm {
    border-radius: 2px
}
.rounded-2xl {
    border-radius: 16px
}
.rounded-lg {
    border-radius: 8px
}
.rounded-\[inherit\] {
    border-radius: inherit
}
.rounded-full {
    border-radius: 9999px
}
.rounded-l {
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px
}
.rounded-l-none {
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px
}
.rounded-r-none {
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px
}
.rounded-tl-\[inherit\] {
    border-top-left-radius: inherit
}
.rounded-tr-\[inherit\] {
    border-top-right-radius: inherit
}
.rounded-bl-\[inherit\] {
    border-bottom-left-radius: inherit
}
.rounded-br-\[inherit\] {
    border-bottom-right-radius: inherit
}
.border {
    border-width: 1px
}
.border-0 {
    border-width: 0px
}
.border-b-2 {
    border-bottom-width: 2px
}
.border-r-0 {
    border-right-width: 0px
}
.border-blue-500 {
    --tw-border-opacity: 1;
    border-color: rgb(59 130 246 / var(--tw-border-opacity))
}
.border-transparent {
    border-color: transparent
}
.border-gray-300 {
    --tw-border-opacity: 1;
    border-color: rgb(209 213 219 / var(--tw-border-opacity))
}
.border-slate-300 {
    --tw-border-opacity: 1;
    border-color: rgb(203 213 225 / var(--tw-border-opacity))
}
.border-slate-200 {
    --tw-border-opacity: 1;
    border-color: rgb(226 232 240 / var(--tw-border-opacity))
}
.border-red-600 {
    --tw-border-opacity: 1;
    border-color: rgb(220 38 38 / var(--tw-border-opacity))
}
.border-r-transparent {
    border-right-color: transparent
}
.border-b-blue-500 {
    --tw-border-opacity: 1;
    border-bottom-color: rgb(59 130 246 / var(--tw-border-opacity))
}
.border-b-slate-300 {
    --tw-border-opacity: 1;
    border-bottom-color: rgb(203 213 225 / var(--tw-border-opacity))
}
.bg-gray-800 {
    --tw-bg-opacity: 1;
    background-color: rgb(31 41 55 / var(--tw-bg-opacity))
}
.bg-slate-200 {
    --tw-bg-opacity: 1;
    background-color: rgb(226 232 240 / var(--tw-bg-opacity))
}
.bg-gray-200 {
    --tw-bg-opacity: 1;
    background-color: rgb(229 231 235 / var(--tw-bg-opacity))
}
.bg-indigo-500 {
    --tw-bg-opacity: 1;
    background-color: rgb(99 102 241 / var(--tw-bg-opacity))
}
.bg-cyan-500 {
    --tw-bg-opacity: 1;
    background-color: rgb(6 182 212 / var(--tw-bg-opacity))
}
.bg-gray-900 {
    --tw-bg-opacity: 1;
    background-color: rgb(17 24 39 / var(--tw-bg-opacity))
}
.bg-gray-50 {
    --tw-bg-opacity: 1;
    background-color: rgb(249 250 251 / var(--tw-bg-opacity))
}
.bg-slate-100 {
    --tw-bg-opacity: 1;
    background-color: rgb(241 245 249 / var(--tw-bg-opacity))
}
.bg-black\/50 {
    background-color: rgb(0 0 0 / 0.5)
}
.bg-blue-500 {
    --tw-bg-opacity: 1;
    background-color: rgb(59 130 246 / var(--tw-bg-opacity))
}
.bg-blue-600 {
    --tw-bg-opacity: 1;
    background-color: rgb(37 99 235 / var(--tw-bg-opacity))
}
.bg-slate-300 {
    --tw-bg-opacity: 1;
    background-color: rgb(203 213 225 / var(--tw-bg-opacity))
}
.bg-white {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity))
}
.bg-current {
    background-color: currentColor
}
.bg-slate-800 {
    --tw-bg-opacity: 1;
    background-color: rgb(30 41 59 / var(--tw-bg-opacity))
}
.bg-opacity-50 {
    --tw-bg-opacity: 0.5
}
.bg-clip-padding {
    background-clip: padding-box
}
.fill-slate-300 {
    fill: #cbd5e1
}
.fill-green-600 {
    fill: #16a34a
}
.fill-current {
    fill: currentColor
}
.fill-white {
    fill: #fff
}
.object-cover {
    -o-object-fit: cover;
       object-fit: cover
}
.p-4 {
    padding: 16px
}
.p-3 {
    padding: 12px
}
.p-2 {
    padding: 8px
}
.p-6 {
    padding: 24px
}
.py-4 {
    padding-top: 16px;
    padding-bottom: 16px
}
.py-1 {
    padding-top: 4px;
    padding-bottom: 4px
}
.px-4 {
    padding-left: 16px;
    padding-right: 16px
}
.px-8 {
    padding-left: 32px;
    padding-right: 32px
}
.px-5 {
    padding-left: 20px;
    padding-right: 20px
}
.py-3 {
    padding-top: 12px;
    padding-bottom: 12px
}
.py-2 {
    padding-top: 8px;
    padding-bottom: 8px
}
.px-6 {
    padding-left: 24px;
    padding-right: 24px
}
.py-2\.5 {
    padding-top: 10px;
    padding-bottom: 10px
}
.px-2 {
    padding-left: 8px;
    padding-right: 8px
}
.px-3 {
    padding-left: 12px;
    padding-right: 12px
}
.pl-5 {
    padding-left: 20px
}
.pl-10 {
    padding-left: 40px
}
.pr-10 {
    padding-right: 40px
}
.pt-4 {
    padding-top: 16px
}
.pb-6 {
    padding-bottom: 24px
}
.pr-\[74px\] {
    padding-right: 74px
}
.text-left {
    text-align: left
}
.text-center {
    text-align: center
}
.align-middle {
    vertical-align: middle
}
.text-2xl {
    font-size: 24px;
    line-height: 32px
}
.text-lg {
    font-size: 18px;
    line-height: 28px
}
.text-sm {
    font-size: 14px;
    line-height: 20px
}
.text-xs {
    font-size: 12px;
    line-height: 16px
}
.text-xl {
    font-size: 20px;
    line-height: 28px
}
.text-base {
    font-size: 16px;
    line-height: 24px
}
.font-medium {
    font-weight: 500
}
.font-bold {
    font-weight: 700
}
.font-semibold {
    font-weight: 600
}
.uppercase {
    text-transform: uppercase
}
.leading-6 {
    line-height: 24px
}
.leading-normal {
    line-height: 1.5
}
.tracking-wider {
    letter-spacing: 0.05em
}
.text-gray-800 {
    --tw-text-opacity: 1;
    color: rgb(31 41 55 / var(--tw-text-opacity))
}
.text-gray-600 {
    --tw-text-opacity: 1;
    color: rgb(75 85 99 / var(--tw-text-opacity))
}
.text-cyan-500 {
    --tw-text-opacity: 1;
    color: rgb(6 182 212 / var(--tw-text-opacity))
}
.text-white {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity))
}
.text-gray-900 {
    --tw-text-opacity: 1;
    color: rgb(17 24 39 / var(--tw-text-opacity))
}
.text-gray-700 {
    --tw-text-opacity: 1;
    color: rgb(55 65 81 / var(--tw-text-opacity))
}
.text-slate-400 {
    --tw-text-opacity: 1;
    color: rgb(148 163 184 / var(--tw-text-opacity))
}
.text-red-600 {
    --tw-text-opacity: 1;
    color: rgb(220 38 38 / var(--tw-text-opacity))
}
.text-indigo-500 {
    --tw-text-opacity: 1;
    color: rgb(99 102 241 / var(--tw-text-opacity))
}
.text-blue-600 {
    --tw-text-opacity: 1;
    color: rgb(37 99 235 / var(--tw-text-opacity))
}
.text-slate-500 {
    --tw-text-opacity: 1;
    color: rgb(100 116 139 / var(--tw-text-opacity))
}
.placeholder-slate-400::-moz-placeholder {
    --tw-placeholder-opacity: 1;
    color: rgb(148 163 184 / var(--tw-placeholder-opacity))
}
.placeholder-slate-400::placeholder {
    --tw-placeholder-opacity: 1;
    color: rgb(148 163 184 / var(--tw-placeholder-opacity))
}
.placeholder-opacity-100::-moz-placeholder {
    --tw-placeholder-opacity: 1
}
.placeholder-opacity-100::placeholder {
    --tw-placeholder-opacity: 1
}
.opacity-50 {
    opacity: 0.5
}
.opacity-0 {
    opacity: 0
}
.opacity-100 {
    opacity: 1
}
.opacity-60 {
    opacity: 0.6
}
.opacity-20 {
    opacity: 0.2
}
.shadow {
    --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}
.shadow-xl {
    --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}
.shadow-lg {
    --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}
.outline-none {
    outline: 2px solid transparent;
    outline-offset: 2px
}
.outline-0 {
    outline-width: 0px
}
.filter {
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)
}
.transition {
    transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms
}
.transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms
}
.transition-colors {
    transition-property: color, background-color, border-color, fill, stroke, -webkit-text-decoration-color;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, -webkit-text-decoration-color;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms
}
.transition-opacity {
    transition-property: opacity;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms
}
.transition-\[height\] {
    transition-property: height;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms
}
.duration-200 {
    transition-duration: 200ms
}
.duration-150 {
    transition-duration: 150ms
}
.duration-\[400ms\] {
    transition-duration: 400ms
}
.duration-300 {
    transition-duration: 300ms
}
.ease-in-out {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1)
}
.ease-out {
    transition-timing-function: cubic-bezier(0, 0, 0.2, 1)
}
.ease-in {
    transition-timing-function: cubic-bezier(0.4, 0, 1, 1)
}
.\[scrollbar-gutter\:both-edges_stable\] {
    scrollbar-gutter: both-edges stable
}
.after\:absolute::after {
    content: var(--tw-content);
    position: absolute
}
.after\:-inset-2::after {
    content: var(--tw-content);
    top: -8px;
    right: -8px;
    bottom: -8px;
    left: -8px
}
.after\:rounded-sm::after {
    content: var(--tw-content);
    border-radius: 2px
}
.hover\:-translate-y-0\.5:hover {
    --tw-translate-y: -2px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.hover\:-translate-y-0:hover {
    --tw-translate-y: -0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.hover\:border-blue-500:hover {
    --tw-border-opacity: 1;
    border-color: rgb(59 130 246 / var(--tw-border-opacity))
}
.hover\:bg-indigo-400:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(129 140 248 / var(--tw-bg-opacity))
}
.hover\:bg-blue-400:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(96 165 250 / var(--tw-bg-opacity))
}
.hover\:bg-slate-200:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(226 232 240 / var(--tw-bg-opacity))
}
.hover\:text-gray-800:hover {
    --tw-text-opacity: 1;
    color: rgb(31 41 55 / var(--tw-text-opacity))
}
.focus\:z-10:focus {
    z-index: 10
}
.focus\:border-blue-500:focus {
    --tw-border-opacity: 1;
    border-color: rgb(59 130 246 / var(--tw-border-opacity))
}
.focus\:outline-none:focus {
    outline: 2px solid transparent;
    outline-offset: 2px
}
.focus\:ring-1:focus {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)
}
.focus\:ring-blue-500:focus {
    --tw-ring-opacity: 1;
    --tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity))
}
.focus-visible\:outline-none:focus-visible {
    outline: 2px solid transparent;
    outline-offset: 2px
}
.focus-visible\:ring:focus-visible {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)
}
.focus-visible\:ring-indigo-500:focus-visible {
    --tw-ring-opacity: 1;
    --tw-ring-color: rgb(99 102 241 / var(--tw-ring-opacity))
}
.focus-visible\:ring-blue-500\/50:focus-visible {
    --tw-ring-color: rgb(59 130 246 / 0.5)
}
.focus-visible\:ring-indigo-500\/50:focus-visible {
    --tw-ring-color: rgb(99 102 241 / 0.5)
}
.focus-visible\:ring-opacity-50:focus-visible {
    --tw-ring-opacity: 0.5
}
.focus-visible\:ring-offset-2:focus-visible {
    --tw-ring-offset-width: 2px
}
.active\:bg-indigo-600:active {
    --tw-bg-opacity: 1;
    background-color: rgb(79 70 229 / var(--tw-bg-opacity))
}
.active\:bg-blue-600:active {
    --tw-bg-opacity: 1;
    background-color: rgb(37 99 235 / var(--tw-bg-opacity))
}
.peer:focus-visible ~ .peer-focus-visible\:ring {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)
}
.peer:focus-visible ~ .peer-focus-visible\:ring-blue-500\/50 {
    --tw-ring-color: rgb(59 130 246 / 0.5)
}
.peer:focus-visible ~ .peer-focus-visible\:ring-offset-2 {
    --tw-ring-offset-width: 2px
}
.dark .dark\:inline {
    display: inline
}
.dark .dark\:hidden {
    display: none
}
.dark .dark\:translate-x-5 {
    --tw-translate-x: 20px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}
.dark .dark\:border {
    border-width: 1px
}
.dark .dark\:border-gray-50 {
    --tw-border-opacity: 1;
    border-color: rgb(249 250 251 / var(--tw-border-opacity))
}
.dark .dark\:bg-gray-900 {
    --tw-bg-opacity: 1;
    background-color: rgb(17 24 39 / var(--tw-bg-opacity))
}
.dark .dark\:bg-slate-800 {
    --tw-bg-opacity: 1;
    background-color: rgb(30 41 59 / var(--tw-bg-opacity))
}
.dark .dark\:bg-blue-800 {
    --tw-bg-opacity: 1;
    background-color: rgb(30 64 175 / var(--tw-bg-opacity))
}
.dark .dark\:text-gray-50 {
    --tw-text-opacity: 1;
    color: rgb(249 250 251 / var(--tw-text-opacity))
}
.dark .dark\:text-slate-100 {
    --tw-text-opacity: 1;
    color: rgb(241 245 249 / var(--tw-text-opacity))
}
@media (min-width: 640px) {
    .sm\:mt-8 {
        margin-top: 32px
    }
    .sm\:mt-4 {
        margin-top: 16px
    }
    .sm\:h-64 {
        height: 256px
    }
    .sm\:w-full {
        width: 100%
    }
    .sm\:max-w-xl {
        max-width: 576px
    }
    .sm\:grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr))
    }
    .sm\:object-cover {
        -o-object-fit: cover;
           object-fit: cover
    }
    .sm\:p-6 {
        padding: 24px
    }
    .sm\:text-4xl {
        font-size: 36px;
        line-height: 40px
    }
    .sm\:text-xl {
        font-size: 20px;
        line-height: 28px
    }
    .sm\:text-base {
        font-size: 16px;
        line-height: 24px
    }
}
@media (min-width: 768px) {
    .md\:right-10 {
        right: 40px
    }
    .md\:bottom-10 {
        bottom: 40px
    }
    .md\:mb-5 {
        margin-bottom: 20px
    }
    .md\:w-1\/2 {
        width: 50%
    }
}
@media (min-width: 1024px) {
    .lg\:mr-0 {
        margin-right: 0px
    }
    .lg\:block {
        display: block
    }
    .lg\:grid {
        display: grid
    }
    .lg\:hidden {
        display: none
    }
    .lg\:max-w-full {
        max-width: 100%
    }
    .lg\:grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr))
    }
    .lg\:grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr))
    }
    .lg\:self-center {
        align-self: center
    }
    .lg\:px-12 {
        padding-left: 48px;
        padding-right: 48px
    }
    .lg\:py-24 {
        padding-top: 96px;
        padding-bottom: 96px
    }
    .lg\:text-3xl {
        font-size: 30px;
        line-height: 36px
    }
}
@media (min-width: 1280px) {
    .xl\:text-4xl {
        font-size: 36px;
        line-height: 40px
    }
}
@media (min-width: 1536px) {
    .\32xl\:col-span-2 {
        grid-column: span 2 / span 2
    }
    .\32xl\:col-span-3 {
        grid-column: span 3 / span 3
    }
    .\32xl\:grid-cols-5 {
        grid-template-columns: repeat(5, minmax(0, 1fr))
    }
}
input:focus-visible+*>.\[input\:focus-visible\+\*\>\&\]\:ring-\[6px\] {
    --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(6px + var(--tw-ring-offset-width)) var(--tw-ring-color);
    box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)
}
input:focus-visible+*>.\[input\:focus-visible\+\*\>\&\]\:ring-slate-500\/40 {
    --tw-ring-color: rgb(100 116 139 / 0.4)
}
.dark input:focus-visible+*>.dark\:\[input\:focus-visible\+\*\>\&\]\:ring-slate-100\/40 {
    --tw-ring-color: rgb(241 245 249 / 0.4)
}
